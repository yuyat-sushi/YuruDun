;------------
;	LEGIONS GBC EDITION
;	by yuyat
;	tab 8

	INCLUDE "HARDWARE.INC"

;AdressLD 代入アドレス、代入先アドレス
AdressLD: MACRO
	ld	hl,\1
	ld	a,h
	ld	[\2],a
	ld	a,l
	ld	[\2 + 1],a
	ENDM

SECTION "CALL HL",ROM0[$18]
	jp		hl					;$18

SECTION "V Blank",ROM0[$40]
	call		VblankMethod
	reti
SECTION "LCDC Status Interupt",ROM0[$48]
	reti
SECTION "Timer Interupt",ROM0[$50]
	reti
SECTION "Serial Interupt",ROM0[$58]
	reti
SECTION "Keypad Interupt",ROM0[$60]
	reti
SECTION "Org $100",ROM0[$100]
	nop							; ?????? SP=$FFFE
	jp		begin
	NINTENDO_LOGO          			         	; Nintendo graphic logo

;Rom Header Info
;				 123456789abcdef
	DB			"SHINOSHOGI"            	; Game Name
	DB			0,0,0,0,0               	; Padding to 15 characters
	DB			$0          	           	; 0 - MGB / $80 - Color compatible /
	DB			0,0                     	; Game Maker Code
	DB			0                       	; Game Unit Code
	DB			CART_ROM_MBC1_RAM	   	; Cart type
	DB			CART_ROM_4M	            	; ROM Size (in bits)
	DB			CART_RAM_256K            	; RAM Size (in bits)
	DB			0,1                     	; Maker ID
	DB 			0                       	; Version=0
	DB 			$00                     	; Complement check (important)
	DW 			$0000                   	; Checksum (not important)

SECTION "Main Code",ROM0[$150]
begin:
	di
	ld	sp,$FFFE
	call	Initialize
	;最初に呼び出すシーン
	AdressLD	MapLoad, _SceneAdress
	call	ScreenOnVB
	ei
main:
	ldh	a,[rLY]
	cp	2
	jr	nc,main
	ld	a,[_SceneAdress]
	ld	h,a
	ld	a,[_SceneAdress + 1]
	ld	l,a
	call	$0018					;jp [hl] になっている。実質 call [hl]
	;A+B+Start+Selectでリセットを行う
	ld	a,[_Pad]
	cp	$0f
	jr	z,begin		;リセット判定
	halt
	jr	main

VblankMethod:
	call	$FF80		;スプライト処理
	call		ReadJoystick
	ret

	include "gb_routine.z80"
	include "Map.Z80"
	include "GraphicData.Z80"
	include "Data.Z80"

SECTION "Work RAM",WRAM0[$C000]
OAM_BUFFER0	 			ds	160		;OAMバッファ
Seed					db			;ランダムシード

_SceneAdress				dw			;現在のフレームで実行するアドレス
_VblankAdress				dw			;Vblank中に実行するアドレス

SECTION "MapMode RAM",WRAM0[$C100]
;Map時の変数
m_MapData				ds	10*8		;マップデータ

m_FloorNumber				db			;今何階か

m_PlayerX				db			;プレイヤーのX座標
m_PlayerY				db			;プレイヤーのY座標
m_PlayerWait				db			;プレイヤーの行動待ちフレーム

SECTION "Enemy RAM",WRAM0[$C200]
m_EnemyX				ds	4		;敵X座標(これは最初の敵アドレス)
m_EnemyY				ds	4		;敵Y座標(これは最初の敵アドレス)
m_EnemyType				ds	4		;敵の種類(これは最初の敵アドレス)
								;0 = 何もない
								;1 = スライム
m_EnemyWait				ds	4		;敵の行動待ちフレーム(これは最初の敵アドレス)								
m_EnemyCount				db			;敵の数

SECTION "HI-RAM",HRAM[$FF80]
SPRITE_ROUTINE			ds	SpriteRoutineEnd - SpriteRoutine	;スプライト描画用ルーチン

_Pad				db				;現在のボタン情報
_PadDebounce			db				;押したときのボタン情報